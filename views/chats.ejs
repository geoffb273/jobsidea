
<head>
	<%- include('css/style'); %>
</head>

<body>
<style>
	#post {
		display: flex;
		background: white;
		position: fixed;
		left: 15vw;
		right: 15vw;
		box-shadow: 5px 5px 10px #20537A;
		margin-top: 10px;
		height: max(85vh, 500px);
		min-width: 605px;
	}
   	#table {
   		position: absolute;
   		left: 0;
   		top: 0;
   		bottom: 0;
		width: 225px;
		overflow-y: scroll;
		font-size: max(16px, 1.5vw);
		color: black;
		border: 1px #eeeeee solid;
		border-bottom: none;
		color: white;
		margin-left: 0;
		height: 100%;
		margin-top: 0;
		list-style: none;
    	padding-left: 0;
	}
     
  	
  	.row {
		height: 80px;
		margin-left: 0;
		padding-left: 10px;
		
		display: flex;
		color: black;
	}
	
	.row:hover {
		background: #f9f9f9;
	}
	
	.row > .holder {
		padding-top: 20px;
		padding-left: 10px;
		text-align: left;
	}
	
	.row > .holder > .username {
		font-size: 24px;
		margin: 0;
	}
	
	.row > .holder > .date {
		color: gray;
		font-size: 12px;
	}
	
	
	.icon-pic {
		display: inline-block;
		height: 40px;
		margin-left: -10px;
		margin-right: 10px;
		width: 60px;
	}
      
  	.profilePic {
		border-radius: 50%;
		width: 60px;
		height: 60px;
      	margin-top: 10px;
      	margin-bottom: 10px;
      	
   	}
	
	#chat-page {
		position: absolute;
		left: 225px;
		margin-left: 2px;
		right: 0;
		background: white;
		height: 100%;
	}
	
	#chat-title {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		margin-top: 20px;
		height: 35px;
		border-bottom: 1px solid #eeeeee;
		z-index: 1;
		font-size: 24px;
	}
	
	#chat {
		position: absolute;
		top: 55px;
		bottom: 70px;
		width: 100%;
		margin: 0;
		padding: 0;
		list-style: none;
		overflow-y: scroll;
	}
	
	#input-div {
		position: absolute;
		bottom: 0;
		height: 30px;
		left: 0;
		right: 0;
		display: flex;
		margin: 0;
		margin-left: 50px;
		margin-right: 50px;
		margin-bottom: 20px;
	}
	
	#message-input {
		width: 80%;
		height: 100%;
		border-top-left-radius: 20px;
		border-bottom-left-radius: 20px;
		border: none;
		background: #eeeeee;
		color: black;
		padding-left: 20px;
		font-size: 16px;
	}
	
	#message-button {
		width: 20%;
		height: 100%;
		border-top-right-radius: 20px;
		border-bottom-right-radius: 20px;
		border: none;
		background: linear-gradient(to top left, #20537A, #38698E, #5481A4, #81A8C6);
		color: white;
	}
	
	#message-button:hover {
		background: linear-gradient(to bottom right, #20537A, #38698E, #5481A4, #81A8C6);
	}
	
	.chat-message {
		display: block;
		border: 1px solid #eeeeee;
		border-radius: 20px;
		margin-top: 5px;
		margin-right: 5px;
		margin-left: 5px;
		max-width: 75%;
		padding: 10px;
		text-align: left;
		//min-width: 25px;
	}
	
	.right-chat {
		background: lightgray;
    	margin-left: auto;
    	padding-right: 0;
    	border: none;
	}
	
	.clicked-row {
		background: #eeeeee;
	}
	
	.clicked-row:hover {
		background: #eeeeee;
	}
	
   	
   	
   	@media only screen and (max-width: 800px) {
		#post {
			left: 1vw;
			right: 1vw;
		}
		
	}
	
	@media (prefers-color-scheme: dark) {
		#post {
			background: black;
		}
		#table {
			background: black;
			color: white;
			border: 1px solid #333333;
		}
		td {
			border-bottom: 1px solid #333333;
		}
		#chat-title {
			border-bottom: 1px solid #333333;
			color: white;
			background: black;
		}
		
		#chat-page {
			background: black;
			color: white;
		}
		.row {
			//border-bottom: 1px solid white;
			color: white;
		}
		.row:hover {
			background: #222222
		}
		
		.clicked-row {
			background: #333333;
		}
		
		.clicked-row:hover {
			background: #333333;
		}
		#message-input {
			color: white;
			background: #333333;
		}
		
		.chat-message {
			border: 1px solid #333333
		}
		.right-chat {
			background: gray;
			border: none;
		}
	}
</style>
<meta name="viewport" content="width=device-width,initial-scale=0.8">
<title>Chats / Staffer</title>

<div id="post">
  <ul id = "table"></ul>
  <div id="chat-page">
  	<div id="chat-title">Select a User</div>
  	<ul id="chat" onscroll='checkScroll()'></ul>
  	<div id="input-div">
  		<input id="message-input" disabled="true" autocomplete="off"/>
  		<button id="message-button" onclick="sendMessage()">Send</button>
  	</div>
  </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

<%if (chatId) { %>
	<script>
		var auto = function() {
			var chatId = '<%- chatId %>'
			var row = document.getElementById(chatId)
			if (row) {
				enterChat({target: row})
			}
		}
	</script>
<%} else { %>
	<script>
		var auto = function() {
			console.log("None")
		}
	</script>
<%}%>
<script>
	var table = document.getElementById("table");
	var socket = io();
	var chats = [];
	var username = '<%- username %>'
	var limit = 10;
	var msgLimit = 0;
	var message = document.getElementById("message-input")
	var msgs = []
	var chat = document.getElementById("chat")
	var last = username
	var entered = false
	var clicked = undefined
	var chatId = undefined
	var enterChat = function(e) {
		message.disabled = false
		message.value = ""
		entered = true
		var row = e.target
		while (row.className != 'row') {
			row = row.parentElement;
		}
		row.classList.add("clicked-row")
		if (clicked) {
			clicked.classList.remove("clicked-row")
		}
		clicked = row
		chatId = row.id
		msgs = []
		chat.innerHTML = ""
		$.get("/chat/" + chatId, function(data) {
			if (data) {
				var chat = data
				socket.emit('joined', {username: username, chatId: chatId, unread: chat.unread});
			}
		})
		msgLimit = 20;
		getMessages(chatId, msgLimit, true)
		var title = document.getElementById('chat-title');
		title.innerHTML = row.chatName
	}
	
	var getMessages = function(chatId, mLimit, newChat) {
		$.get("/messages?chatId=" + chatId + "&limit=" + mLimit , function(data) {
			var newMessages = JSON.parse(data)
  			var amt = newMessages.length - msgs.length;
  			var i = newMessages.length - amt;
  			var stay = chat.scrollHeight - 10;
  			console.log(chat.scrollHeight)
  			while (i < newMessages.length) {
  				var r = document.createElement('li');
  				var item = document.createElement('div');
  				r.appendChild(item);
  				r.style.width = "100%"
  				item.className = "chat-message"
    			item.textContent = newMessages[i].content;
    			var length = newMessages[i].content.length;
    			if (length < 10) {
    				length *= 10
    			} else if (length < 15) {
    				length *= 9
    			} else {
    				length *= 6
    			}
    			length += 10
    			item.style.width = length + "px"
    			if (username == newMessages[i].author) {
    				item.classList.add("right-chat")
    			} 
    			last = newMessages[i].author;
  				chat.insertBefore(r, chat.firstChild);
  				msgs.unshift(newMessages[i]);
  				i += 1
  			}
  			if (newChat) {
  				chat.scrollTop = chat.scrollHeight
  			} else {
  				chat.scrollTo(0, chat.scrollHeight - stay - 10);
  			}
		})
	}
	
	var updateChats = function() {
		
    	$.get("/my-chats?limit=" + limit, function(data) {
    		var chats = data
    		table.innerHTML = ""
    		chats.forEach(chat => {
    			var i = chats.findIndex( curr => { curr.id == chat.id })
    			var date = (Date.now() - new Date(chat.lastAccessed)) / 1000
				var dateString = Math.round(date + 1) + " s ago"
				if (date >= 59 && date < 60 * 60) {
					dateString = Math.round(date / 60) + " min ago"
				} else if (date >= 60 * 60 && date < 60 * 60 * 24) {
					dateString = Math.round(date / (60 * 60)) + " hr ago"
				} else if (date >= 60 * 60 * 24 && date < 60 * 60 * 24 * (365 + 0.25)) {
					dateString = Math.round(date / (60 * 60 * 24)) + " d ago"
				} else if (date >= 60 * 60 * 24 * (365 + 0.25)) {
					dateString = Math.round(date / (60 * 60 * 24 * (365 + 0.25))) + " yr ago"
				}
    			var chatName = chat.id.split("@").filter(function(name) {
					return name != username
				})[0]
    			
    			var row = document.createElement("li")
    			row.className = "row"
    			table.appendChild(row);
    			var cell0 = document.createElement("div")
    			cell0.className = "pic"
    			row.appendChild(cell0)
    			cell0.style.textAlign = 'right'
				$.get("/user-pic/" + chatName, function(data) {
					if (data) {
						cell0.innerHTML = "<img src=" + data + " class='profilePic'></img>"
					} else {
						cell0.innerHTML = "<span class='icon-pic'><i class='fa fa-user fa-2xl'></i></span>"
					}
					
					cell0.style.alignSelf = "flex-end"
				})
    			var holder = document.createElement("div")
    			holder.className = "holder"
				var cell1 = document.createElement("p")
				cell1.className = "username"
				holder.appendChild(cell1)
				if (chat.unread == username) {
					cell1.innerHTML = chatName + ' <span style="color:#20537A;font-size:max(0.75vw, 8px)"><i class="fa-solid fa-circle"></i></span>';
				} else {
					cell1.innerHTML = chatName;
				}
				
				cell1.style.textAlign = 'center'
				cell1.id = 'name'
				
				var cell2 = document.createElement("p")
				cell2.className = "date"
				holder.appendChild(cell2)
				cell2.innerHTML = dateString
				cell2.style.fontSize = '12px'
				row.appendChild(holder)
				row.id = chat.id
				row.chatName = chatName
				row.onclick = (e) => {enterChat(e)}
    		})
    		if (!entered) {
    			auto()
    		}
    	})
  	};
  	
  	var refresh = function() {
  		limit += 10
  		updateChats();
  	}
  	
  	var checkScroll = function() {
  		//console.log(chat.scrollTop)
  		//console.log(chat.scrollHeight)
  		if (entered && chat.scrollTop == 0) {
  			msgLimit += 20
  			//console.log(chat.scrollHeight)
      		getMessages(chatId, msgLimit, false)
    	}
  	}
  	
  	socket.emit('self room', {username: username})
  	
	socket.on('update chats', function(msg) {
		setTimeout(updateChats, 1000);
	});
	
	updateChats();
	
		
		
	var sendMessage = function() {
		
		if (entered && message.value) {
			var m = message.value.trim()
			if (m.length == 0) {
				return
			}
			socket.emit('chat message', {message: m, username: username, chatId: chatId});
			var obj = {content: m, username: username, chatId: chatId}
			$.post('/handle-message', obj);
	 		var item = document.createElement('li');
			item.textContent = m;
			var r = document.createElement('li');
  			var item = document.createElement('div');
  			r.appendChild(item);
  			r.style.width = "100%"
  			item.className = "chat-message"
    		item.textContent = m
    		var length = m.length;
    		if (length < 10) {
    			length *= 10
    		} else if (length < 15) {
    			length *= 9
    		} else {
    			length *= 6
    		}
    		length += 10
    		item.style.width = length + "px"
    		item.classList.add("right-chat")
			last = username;
			chat.appendChild(r);
			chat.scrollTo(0, chat.scrollHeight);
			
		}
		message.value = '';
	};
	var leave = function() {
		socket.emit('user left', {username: username, chatId: chat.id});
	};
	
	
	socket.on('chat message', function(msg) {
		var item = document.createElement('div');
		item.textContent = msg.message;
		item.className = "chat-message"
		var r = document.createElement('li');
		r.appendChild(item);
		var length = msg.message.length;
		if (length < 10) {
    		length *= 10
    	} else if (length < 15) {
    		length *= 9
    	} else {
    		length *= 6
    	}
    	length += 10
    	item.style.width = length + "px"
		last = msg.username
		
		chat.appendChild(r);
		chat.scrollTo(0, chat.scrollHeight);
	});
	socket.on('joined', function(obj) {
		var item = document.createElement('div');
		var msg = "<b>" + obj.username + " joined</b>";
		item.innerHTML = msg
		var r = document.createElement('li');
		r.appendChild(item);
		var length = msg.length;
		if (length < 10) {
    		length *= 10
    	} else if (length < 15) {
    		length *= 9
    	} else {
    		length *= 6
    	}
    	length += 10
    	item.style.width = length + "px"
		last = obj.username
		chat.appendChild(r);
		chat.scrollTo(0, chat.scrollHeight);
	})
	socket.on('user left', function(msg) {
		missing.unshift(msg.username);
		var item = document.createElement('li');
		item.innerHTML = "<b>" + msg.username + " left the chat</b>";
		if (last != msg.username) {
			item.style.borderTop = "0.1px solid"
		}
		last = msg.username
		item.style.background = "#e9f4ff"
		chat.appendChild(item);
		chat.scrollTo(0, chat.scrollHeight);
	});
</script>


</body>